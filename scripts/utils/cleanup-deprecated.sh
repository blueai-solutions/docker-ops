#!/bin/bash

# =============================================================================
# SCRIPT DE LIMPEZA DE FUNCIONALIDADES DEPRECIADAS
# =============================================================================

# Configura√ß√µes
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../.." && pwd)"

# Fun√ß√£o para mostrar ajuda
show_help() {
    echo "üßπ Limpeza de Funcionalidades Depreciadas"
    echo "========================================="
    echo ""
    echo "Uso: $0 [op√ß√£o]"
    echo ""
    echo "OP√á√ïES:"
    echo "  --check         Verificar funcionalidades depreciadas"
    echo "  --remove        Remover funcionalidades depreciadas"
    echo "  --help, -h      Mostrar esta ajuda"
    echo ""
    echo "EXEMPLOS:"
    echo "  $0 --check"
    echo "  $0 --remove"
}

# Fun√ß√£o para verificar funcionalidades depreciadas
check_deprecated() {
    echo "üîç Verificando funcionalidades depreciadas..."
    echo "============================================="
    echo ""
    
    local deprecated_items=()
    
    # Verificar smart-backup.sh
    if [ -f "$PROJECT_ROOT/scripts/backup/smart-backup.sh" ]; then
        deprecated_items+=("smart-backup.sh")
        echo "‚ùå smart-backup.sh - Script de backup antigo (substitu√≠do por dynamic-backup.sh)"
    fi
    
    # Verificar outros arquivos depreciados
    if [ -f "$PROJECT_ROOT/scripts/backup/legacy-backup.sh" ]; then
        deprecated_items+=("legacy-backup.sh")
        echo "‚ùå legacy-backup.sh - Script de backup legado"
    fi
    
    # Verificar configura√ß√µes antigas
    if [ -f "$PROJECT_ROOT/config/old-backup-config.sh" ]; then
        deprecated_items+=("old-backup-config.sh")
        echo "‚ùå old-backup-config.sh - Configura√ß√£o de backup antiga"
    fi
    
    if [ ${#deprecated_items[@]} -eq 0 ]; then
        echo "‚úÖ Nenhuma funcionalidade depreciada encontrada"
        return 0
    else
        echo ""
        echo "üìã Total de itens depreciados: ${#deprecated_items[@]}"
        echo ""
        echo "üí° Use '$0 --remove' para remover estes itens"
        return 1
    fi
}

# Fun√ß√£o para remover funcionalidades depreciadas
remove_deprecated() {
    echo "üóëÔ∏è  Removendo funcionalidades depreciadas..."
    echo "==========================================="
    echo ""
    
    local removed_items=()
    
    # Remover smart-backup.sh
    if [ -f "$PROJECT_ROOT/scripts/backup/smart-backup.sh" ]; then
        echo "üóëÔ∏è  Removendo smart-backup.sh..."
        rm "$PROJECT_ROOT/scripts/backup/smart-backup.sh"
        removed_items+=("smart-backup.sh")
    fi
    
    # Remover outros arquivos depreciados
    if [ -f "$PROJECT_ROOT/scripts/backup/legacy-backup.sh" ]; then
        echo "üóëÔ∏è  Removendo legacy-backup.sh..."
        rm "$PROJECT_ROOT/scripts/backup/legacy-backup.sh"
        removed_items+=("legacy-backup.sh")
    fi
    
    if [ -f "$PROJECT_ROOT/config/old-backup-config.sh" ]; then
        echo "üóëÔ∏è  Removendo old-backup-config.sh..."
        rm "$PROJECT_ROOT/config/old-backup-config.sh"
        removed_items+=("old-backup-config.sh")
    fi
    
    if [ ${#removed_items[@]} -eq 0 ]; then
        echo "‚úÖ Nenhum item depreciado encontrado para remo√ß√£o"
    else
        echo ""
        echo "‚úÖ Itens removidos:"
        for item in "${removed_items[@]}"; do
            echo "   - $item"
        done
        echo ""
        echo "üéâ Limpeza conclu√≠da com sucesso!"
    fi
}

# Fun√ß√£o principal
main() {
    case "$1" in
        --check)
            check_deprecated
            ;;
        --remove)
            echo "‚ö†Ô∏è  ATEN√á√ÉO: Esta opera√ß√£o ir√° remover permanentemente arquivos depreciados!"
            echo "üí° Recomendamos fazer backup antes de continuar."
            echo ""
            read -p "Deseja continuar? (y/N): " -n 1 -r
            echo
            if [[ $REPLY =~ ^[Yy]$ ]]; then
                remove_deprecated
            else
                echo "‚ùå Opera√ß√£o cancelada"
                exit 0
            fi
            ;;
        --help|-h|"")
            show_help
            ;;
        *)
            echo "‚ùå Op√ß√£o inv√°lida: $1"
            show_help
            exit 1
            ;;
    esac
}

# Executar fun√ß√£o principal
main "$@"
