#!/bin/bash

# Script de teste para notifica√ß√µes do Docker Backup
# =================================================

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
DATE=$(date '+%Y-%m-%d %H:%M:%S')

# Carregar configura√ß√µes
NOTIFICATION_CONFIG="$SCRIPT_DIR/../../config/notification-config.sh"
VERSION_CONFIG="$SCRIPT_DIR/../../config/version-config.sh"

if [ -f "$NOTIFICATION_CONFIG" ]; then
    source "$NOTIFICATION_CONFIG"
else
    echo "‚ùå Arquivo de configura√ß√£o n√£o encontrado: $NOTIFICATION_CONFIG"
    exit 1
fi

if [ -f "$VERSION_CONFIG" ]; then
    source "$VERSION_CONFIG"
else
    echo "‚ùå Arquivo de configura√ß√£o de vers√£o n√£o encontrado"
    exit 1
fi

echo "üß™ Testando sistema de notifica√ß√µes..."
echo "====================================="
echo "Data: $DATE"
echo ""

# Fun√ß√£o para notifica√ß√£o macOS
notify_macos() {
    local message="$1"
    local subtitle="$2"
    local sound="$3"
    
    if [ "$MACOS_NOTIFICATIONS_ENABLED" = true ]; then
        echo "üì± Enviando notifica√ß√£o macOS: $message"
        osascript -e "display notification \"$message\" with title \"$NOTIFICATION_TITLE\" subtitle \"$subtitle\" sound name \"$sound\"" 2>/dev/null
        if [ $? -eq 0 ]; then
            echo "  ‚úÖ Notifica√ß√£o macOS enviada com sucesso"
        else
            echo "  ‚ùå Falha ao enviar notifica√ß√£o macOS"
        fi
    else
        echo "  ‚ö†Ô∏è  Notifica√ß√µes macOS desabilitadas"
    fi
}

# Fun√ß√£o para enviar email
send_email() {
    local subject="$1"
    local body="$2"
    
    if [ "$EMAIL_ENABLED" = true ] && [ -n "$EMAIL_TO" ]; then
        echo "üìß Enviando email para: $EMAIL_TO"
        local full_subject="$EMAIL_SUBJECT_PREFIX $subject"
        local email_body="
Teste de notifica√ß√£o - Data: $DATE
Script: $SCRIPT_DIR/test-notifications.sh

$body

---
Este √© um email de teste do $SYSTEM_NAME.
"
        
        if command -v mail >/dev/null 2>&1; then
            echo "$email_body" | mail -s "$full_subject" "$EMAIL_TO" 2>/dev/null
            if [ $? -eq 0 ]; then
                echo "  ‚úÖ Email enviado com sucesso via 'mail'"
            else
                echo "  ‚ùå Falha ao enviar email via 'mail'"
            fi
        elif command -v sendmail >/dev/null 2>&1; then
            {
                echo "To: $EMAIL_TO"
                echo "From: $EMAIL_FROM"
                echo "Subject: $full_subject"
                echo "Content-Type: text/plain; charset=UTF-8"
                echo ""
                echo "$email_body"
            } | sendmail "$EMAIL_TO" 2>/dev/null
            if [ $? -eq 0 ]; then
                echo "  ‚úÖ Email enviado com sucesso via 'sendmail'"
            else
                echo "  ‚ùå Falha ao enviar email via 'sendmail'"
            fi
        else
            echo "  ‚ùå Nenhum cliente de email encontrado (mail ou sendmail)"
        fi
    else
        echo "  ‚ö†Ô∏è  Email desabilitado ou n√£o configurado"
    fi
}

# Teste 1: Notifica√ß√£o de sucesso
echo "üîµ Teste 1: Notifica√ß√£o de Sucesso"
echo "----------------------------------"
notify_macos "Teste de sucesso" "Sistema funcionando corretamente" "$NOTIFICATION_SOUND"
send_email "TESTE: Sucesso" "‚úÖ Sistema de notifica√ß√µes funcionando corretamente"
echo ""

# Aguardar 2 segundos
sleep 2

# Teste 2: Notifica√ß√£o de aviso
echo "üü° Teste 2: Notifica√ß√£o de Aviso"
echo "--------------------------------"
notify_macos "Teste de aviso" "Aten√ß√£o necess√°ria" "Ping"
send_email "TESTE: Aviso" "‚ö†Ô∏è  Este √© um teste de aviso do sistema"
echo ""

# Aguardar 2 segundos
sleep 2

# Teste 3: Notifica√ß√£o de erro
echo "üî¥ Teste 3: Notifica√ß√£o de Erro"
echo "-------------------------------"
notify_macos "Teste de erro" "Problema detectado" "Sosumi"
send_email "TESTE: Erro" "‚ùå Este √© um teste de erro do sistema"
echo ""

# Teste 4: Verificar configura√ß√µes
echo "‚öôÔ∏è  Configura√ß√µes Atuais"
echo "-----------------------"
echo "Notifica√ß√µes habilitadas: $NOTIFICATIONS_ENABLED"
echo "Email habilitado: $EMAIL_ENABLED"
echo "Email de destino: $EMAIL_TO"
echo "Notifica√ß√µes macOS habilitadas: $MACOS_NOTIFICATIONS_ENABLED"
echo "Som das notifica√ß√µes: $NOTIFICATION_SOUND"
echo ""

# Teste 5: Verificar depend√™ncias
echo "üîß Verifica√ß√£o de Depend√™ncias"
echo "-----------------------------"
if command -v osascript >/dev/null 2>&1; then
    echo "‚úÖ osascript dispon√≠vel (notifica√ß√µes macOS)"
else
    echo "‚ùå osascript n√£o encontrado"
fi

if command -v mail >/dev/null 2>&1; then
    echo "‚úÖ mail dispon√≠vel (cliente de email)"
else
    echo "‚ö†Ô∏è  mail n√£o encontrado"
fi

if command -v sendmail >/dev/null 2>&1; then
    echo "‚úÖ sendmail dispon√≠vel (cliente de email)"
else
    echo "‚ö†Ô∏è  sendmail n√£o encontrado"
fi
echo ""

echo "üéâ Teste de notifica√ß√µes conclu√≠do!"
echo "==================================="
echo ""
echo "üìã Pr√≥ximos passos:"
echo "1. Verifique se recebeu as notifica√ß√µes do macOS"
echo "2. Verifique se recebeu os emails de teste"
echo "3. Configure seu email em config/notification-config.sh se necess√°rio"
echo "4. Execute ./blueai-docker-ops.sh backup para testar o sistema completo"
