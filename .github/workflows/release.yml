name: 🚀 Release Automático - BlueAI Docker Ops

on:
  push:
    tags:
      - 'v*'

env:
  SYSTEM_NAME: "BlueAI Docker Ops"

jobs:
  # 🏷️ Criar Release
  create-release:
    name: 🏷️ Criar Release
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4
        
      - name: 🏷️ Obter informações da tag
        id: tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "tag_version=${TAG_NAME#v}" >> $GITHUB_OUTPUT
          echo "📋 Tag: $TAG_NAME"
          echo "📋 Versão: ${TAG_NAME#v}"
          
      - name: 📋 Gerar release notes dinâmicos
        run: |
          echo "📋 Gerando release notes dinâmicos..."
          
          # Sourcing da configuração
          source config/version-config.sh
          
          # Criar release notes dinâmicos
          cat > RELEASE_NOTES.md << EOF
          # 🚀 Release ${{ steps.release.outputs.release_tag }}
          
          ## 📋 Informações do Sistema
          
          **Nome:** $SYSTEM_NAME  
          **Versão:** ${{ steps.release.outputs.release_version }}  
          **Autor:** $SYSTEM_AUTHOR  
          **Licença:** $SYSTEM_LICENSE  
          **Descrição:** $SYSTEM_DESCRIPTION
          
          ## ✨ Funcionalidades Principais
          
          ### 🔄 Sistema de Backup e Recuperação
          - Backup dinâmico de containers Docker
          - Recuperação automática com priorização
          - Sistema de agendamento inteligente
          
          ### 🔧 Configuração e Instalação
          - Instalação automática e manual
          - Sistema de templates para configuração
          - Configuração interativa e automática
          
          ### 📊 Monitoramento e Notificações
          - Logs estruturados e relatórios HTML
          - Notificações macOS e email
          - Sistema de monitoramento em tempo real
          
          ## 🏗️ Arquitetura Organizada
          
          ### 📁 Estrutura de Scripts
          - **Core:** Funcionalidades principais do sistema
          - **Backup:** Sistema de backup dinâmico
          - **Notifications:** Sistema de notificações
          - **Logging:** Sistema de logs avançados
          - **Utils:** Utilitários para usuários finais
          - **Install:** Scripts de instalação
          
          ### 🔒 Segurança e Distribuição
          - Templates limpos para distribuição
          - Configurações locais preservadas
          - Pacotes otimizados para usuários finais
          
          ## 🚀 Instalação
          
          ### ⚡ Instalação Automática
          \`\`\`bash
          curl -sSL https://raw.githubusercontent.com/blueai-solutions/docker-ops/main/install/install.sh | bash
          \`\`\`
          
          ### 🔧 Instalação Manual
          \`\`\`bash
          git clone https://github.com/blueai-solutions/docker-ops.git
          cd docker-ops/backend
          ./scripts/utils/config-setup.sh --interactive
          \`\`\`
          
          ## 📚 Documentação
          
          - **📖 Guia de Início Rápido:** [docs/guia-inicio-rapido.md](docs/guia-inicio-rapido.md)
          - **🔧 Comandos:** [docs/comandos.md](docs/comandos.md)
          - **🏗️ Arquitetura:** [docs/arquitetura.md](docs/arquitetura.md)
          - **🚀 LaunchAgent:** [docs/launchagent.md](docs/launchagent.md)
          - **🆘 Solução de Problemas:** [docs/solucao-problemas.md](docs/solucao-problemas.md)
          
          ## 🆘 Suporte
          
          - **📧 Email:** docker-ops@blueaisolutions.com.br
          - **🐛 Issues:** https://github.com/blueai-solutions/docker-ops/issues
          - **📖 Documentação:** https://github.com/blueai-solutions/docker-ops/tree/main/docs
          
          ---
          
          **Desenvolvido com ❤️ pela $SYSTEM_AUTHOR**
          EOF
          
          echo "✅ Release notes dinâmicos criados!"
          echo "📋 Conteúdo baseado em: $SYSTEM_NAME v${{ steps.release.outputs.release_version }}"
          
      - name: 🏷️ Criar Release no GitHub
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          release_name: "🚀 ${{ steps.tag.outputs.tag_name }} - ${{ env.SYSTEM_NAME }}"
          body: ${{ steps.release_notes.outputs.release_content }}
          draft: false
          prerelease: false
          
      - name: 📤 Upload assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./RELEASE_NOTES.md
          asset_name: RELEASE_NOTES.md
          asset_content_type: text/markdown
          
      - name: 🎯 Status final
        run: |
          echo "🎉 RELEASE CRIADO COM SUCESSO!"
          echo "🏷️ Tag: ${{ steps.tag.outputs.tag_name }}"
          echo "📋 Versão: ${{ steps.tag.outputs.tag_version }}"
          echo "🚀 BlueAI Docker Ops está disponível para download!"
